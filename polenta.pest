/* *************************************************************************** */
/// (Atomic) A number, which is a sequence of digits.
Uint = @{ ASCII_NONZERO_DIGIT ~ (ASCII_DIGIT)* }

/// (Atomic) Addition and subtraction operations.
OpAdd = @{ "+" | "-" }

/// (Silent) Multiplication operation, mostly used for coefficients.
OpMul = _{ "*" }

/// (Silent) Power operation, used for exponents of polynomial terms.
OpPow = _{ "^" }

/// Coefficient of a term.
Coefficient = { Uint ~ OpMul }

/// Exponent of a term.
Exponent = { OpPow ~ Uint }

/// A term-name.
Identifier = { (ASCII_ALPHA | "_") ~ (ASCII_ALPHANUMERIC | "_")+ }

/// A term in a polynomial.
Term = {
    Coefficient? ~ Identifier ~ Exponent?
  | Uint
}

/// A polynomial expression, such as `5*x^2 + 3*x + 3`
Poly = { OpAdd? ~ Term ~ (OpAdd ~ Term)* }
/* *************************************************************************** */

/// A let statement, assigns the rhs to lhs.
/// If the lhs has `$` prefix, and the rhs is a monomial, it is assigned as value.
/// If the lhs is upper-case, the rhs is assigned as polynomial.
LetStmt = { "let" ~ Identifier ~ "=" ~ Poly ~ ";" }

LetStmts = { LetStmt ~ (NEWLINE ~ LetStmt)* }

/* *************************************************************************** */
WHITESPACE = _{ " " | "\t" }
COMMENT    = _{ "//" ~ (!NEWLINE ~ ANY)* ~ NEWLINE }

Main = _{ SOI ~ Poly ~ EOI }
/* *************************************************************************** */
